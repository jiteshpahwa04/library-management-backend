version: "3.8"

services:
  backend:
    build: .
    container_name: my-backend
    depends_on:
      elasticsearch:
        condition: service_healthy
      db:
        condition: service_started
    environment:
      DATABASE_URL: "postgresql://postgres:toughpassword@db:5432/librarydb"
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      PORT: 5000
      NODE_ENV: production
    ports:
      - "5000:5000"
    volumes:
      - .:/app

  db:
    image: postgres:latest
    container_name: my-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: toughpassword
      POSTGRES_DB: librarydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    container_name: my-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - logger.level=error
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://elasticsearch:9200/_cluster/health | grep -q '\"status\":\"green\"' || exit 1"]
      interval: 10s
      retries: 5
      timeout: 5s

volumes:
  postgres_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  elastic:
    driver: bridge